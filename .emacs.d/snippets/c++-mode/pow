# -*- mode: snippet -*-
# name: modular exponentiation
# key: pow
# --
template<class T>
T pow(T a, T b, T c) {
    // compute a^b mod c
    T ans = 1;
    while (b > 0) {
        if (b&1)
            ans = (ans*a) % c;
        b = b >> 1;
        a = (a*a) % c;
    }
    return ans;
}
